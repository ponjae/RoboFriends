{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","handleNameChange","e","handleEmailChange","onSubmit","obj","preventDefault","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAAUC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPS,SCOlBC,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,eACZC,SAAUH,OCEXI,EATA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKrB,EAAMsB,YCkBJC,E,kDAnBX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAK5B,MAAMsB,a,GAjBEQ,aCoFbC,G,wDA5EX,aAAe,IAAD,8BACV,gBAiBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAnBhC,EAsBdC,iBAAmB,SAACC,GAChB,EAAKT,SAAS,CAAC5B,KAAOqC,EAAEH,OAAOC,SAvBrB,EA0BdG,kBAAoB,SAACD,GACjB,EAAKT,SAAS,CAAC3B,MAAOoC,EAAEH,OAAOC,SA3BrB,EA+BdI,SAAW,SAACF,GACR,EAAKT,SAAS,CAAC1B,GAAI,EAAKqB,MAAMrB,GAAG,IACjC,IAAIsC,EAAM,CACN,KAAS,EAAKjB,MAAMvB,KACpB,GAAO,EAAKuB,MAAMrB,GAClB,MAAU,EAAKqB,MAAMtB,OAGzB,EAAK2B,SAAS,CACVrB,OAAM,sBAAO,EAAKgB,MAAMhB,QAAlB,CAA0BiC,MAGpCH,EAAEI,iBACF,EAAKb,SAAS,CACV,KAAS,GACT,MAAU,MA5Cd,EAAKL,MAAQ,CACThB,OAAQ,GACR0B,YAAa,GACbhC,MAAO,GACPD,KAAM,GACNE,GAAI,IAPE,E,qDAYd,WAAqB,IAAD,OAChBwC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKlB,SAAS,CAAErB,OAAQuC,S,oBAmC/C,WAAU,IAAD,EAC2BnB,KAAKJ,MAA7BhB,EADH,EACGA,OAAQ0B,EADX,EACWA,YACVc,EAAiBxC,EAAOyC,QAAO,SAAAC,GACjC,OAAOA,EAAMjD,KAAKkD,cAAcC,SAASlB,EAAYiB,kBAEzD,OAAQ3C,EAAO6C,OAGP,sBAAKjD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAce,KAAKI,iBAC9B,uBAAMQ,SAAUZ,KAAKY,SAArB,UACQ,uBAAO1B,KAAK,OAAOV,UAAU,mCAAmCkD,UAAQ,EAACnD,GAAG,YAAYiC,MAAOR,KAAKJ,MAAMvB,KAAMe,SAAUY,KAAKS,iBAAkBtB,YAAY,oBAC7J,uBAAOD,KAAK,OAAOV,UAAU,mCAAmCkD,UAAQ,EAACnD,GAAG,aAAaiC,MAAOR,KAAKJ,MAAMtB,MAAOc,SAAUY,KAAKW,kBAAmBxB,YAAY,qBAChK,uBAAOD,KAAK,SAASV,UAAU,mCAAmCgC,MAAM,cAEhF,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQwC,WAZlC,oBAAI5C,UAAU,KAAd,yB,GAzDM0B,cCGHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.bf2a9318.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const {name, email, id} = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='Robots'  src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={user.id}\n                            name={user.name}\n                            email={user.email}\n                        />\n                    );\n                })\n                }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({searchChange}) => {\n    return(\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='Search robot'\n                onChange={searchChange}\n            />\n        </div>\n\n\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1>Oops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundary from '../Components/ErrorBoundary';\nimport './App.css';\n\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchField: '',\n            email: '',\n            name: '',\n            id: 11\n        };\n    }\n\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value });\n    }\n\n    handleNameChange = (e) => {\n        this.setState({name : e.target.value});\n    }\n\n    handleEmailChange = (e) => {\n        this.setState({email: e.target.value});\n    }\n\n\n    onSubmit = (e) => {\n        this.setState({id: this.state.id+1});\n        let obj = {\n            \"name\" : this.state.name,\n            \"id\" : this.state.id,\n            \"email\" : this.state.email\n        }\n\n        this.setState({\n            robots : [...this.state.robots, obj]\n        });\n\n        e.preventDefault();\n        this.setState({\n            \"name\" : '',\n            \"email\" : ''\n        })\n    }\n\n    render() {\n        const { robots, searchField } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        });\n        return !robots.length ?\n            <h1 className='tc'>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <form onSubmit={this.onSubmit}>\n                            <input type='text' className='pa3 ba b--green bg-lightest-blue' required id='nameField' value={this.state.name} onChange={this.handleNameChange} placeholder='Enter your name'/>\n                            <input type='text' className='pa3 ba b--green bg-lightest-blue' required id='emailField' value={this.state.email} onChange={this.handleEmailChange} placeholder='Enter your email'/>\n                            <input type=\"submit\" className='pa3 ba b--green bg-lightest-blue' value=\"Submit\"/>\n                    </form>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}